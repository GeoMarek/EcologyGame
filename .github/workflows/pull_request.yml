name: Pull Request Workflow
on: 
  pull_request:
    branches: [ main ]
        
jobs:
  put_label:
    # Job to create and assign label to pull request
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@main
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
 
  changes:
    # Job to detect changes in specific paths
    runs-on: ubuntu-latest
    outputs:
      docs:     ${{ steps.filter.outputs.docs }}
      frontend: ${{ steps.filter.outputs.frontend }}
      backend:  ${{ steps.filter.outputs.backend }}
    steps:
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          docs:
            - 'docs/**'
          frontend:
            - 'source/frontend/**'
          backend:
            - 'source/backend/**'
  require_reviewers:
    # Job to require review defined in label.reviews.yml
    runs-on: ubuntu-18.04
    needs: changes
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Require-reviewers
        uses: travelperk/label-requires-reviews-action@v0.1
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN}}
  build_latex:
    # Job to compile latex document and upload pdf as artifact
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.docs == 'true' }}
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Compile Latex document
        uses: xu-cheng/latex-action@v2
        with:
            root_file: docs/project/main.tex
        env:
            TEXINPUTS: ".:./docs/project//:"
      - name: Add short hash to distinguish commits
        run: echo "short_sha=`echo ${{github.event.pull_request.head.sha}} | cut -c1-6`" >> $GITHUB_ENV
      - name: Upload Artifact 
        uses: actions/upload-artifact@v2
        with:
            name: docs-${{github.actor}}-${{github.event.number}}-${{env.short_sha}}
            path: main.pdf

  python_check:
    # Job to check if python code is formatted correctly
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.backend == 'true' }}
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install black
        run: |
          python -m pip install --upgrade pip
          pip install isort black
      - name: Run black
        run: |
          black --check .

  javascript_check:
    # Job to check if javascript code is formatted correctly
    runs-on: ubuntu-latest
    needs: changes
    if: ${{ needs.changes.outputs.frontend == 'true' }}
    steps:
    - name: Set up Git repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref }}
        persist-credentials: false

    - name: Prettify code
      uses: creyD/prettier_action@v4.0
      with:
        dry: True
        prettier_options: --check --config source/frontend/.prettierrc.yaml source/frontend/src
        github_token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}